{"attrs":{"x":0,"y":0,"outputs":{"image":{"uid":"1760016e3ec-f62d-a9f0-7fb3-2892","key":"image"}}},"nodes":[{"key":"other-js-code-output","x":-404.5,"y":-1.75,"uid":"175f56ae5db-8a8a-fddd-6d35-7f02","inputs":{},"forms":{"code":"return {\r\n    data:window.voxelDataTest,\r\n    width:512,\r\n    height:512,\r\n    depth:472\r\n}"},"level":1,"outputs":{"out":{"data":null,"width":512,"height":512,"depth":472}},"cache":{}},{"key":"voxel-mat-view","x":-405.5,"y":-134.75,"uid":"175f56b15fb-513b-272e-6e38-996f","inputs":{},"forms":{},"level":1,"outputs":{"mat":null},"cache":{}},{"key":"voxel-render-code","x":-76.5,"y":-155.75,"uid":"175f56b246f-3ab2-3b49-fc7c-1875","inputs":{"mat":{"uid":"175f56b15fb-513b-272e-6e38-996f","key":"mat"},"voxel":{"uid":"175f56ae5db-8a8a-fddd-6d35-7f02","key":"out"}},"forms":{"code":"#include voxel-base;\n\n//投射步数\nfloat step_num = 500.0;\n\nvoid run(){\n\t//根据步数获取投射信息\n\tRay ray = getRay(step_num);\n\t//循环步进\n\tfor(float i = 0.0;i < step_num;i++){\n\t\tray.pos += ray.step;\n\t\t//当碰到实体时输出深度\n\t\tif(getValue(ray.pos) > 1100.0){\n\t\t\tfloat c = i / step_num;\n\t\t\tc = 1.0 - c;\n\t\t\toutColor = vec4(c,c,c,1);\n\t\t\treturn;\n\t\t}\n\t}\n}"},"level":-1,"outputs":{"image":{"data":{},"type":"texture","width":480,"height":480,"gl":{"QUERY_COUNTER_BITS":34916,"TIME_ELAPSED":35007,"TIMESTAMP":36392,"GPU_DISJOINT":36795,"TEXTURE_MAX_ANISOTROPY":34046,"MAX_TEXTURE_MAX_ANISOTROPY":34047,"COMPRESSED_RGB_S3TC_DXT1_EXT":33776,"COMPRESSED_RGBA_S3TC_DXT1_EXT":33777,"COMPRESSED_RGBA_S3TC_DXT3_EXT":33778,"COMPRESSED_RGBA_S3TC_DXT5_EXT":33779,"COMPRESSED_SRGB_S3TC_DXT1_EXT":35916,"COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT":35917,"COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT":35918,"COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT":35919}}},"cache":{}},{"key":"voxel-render-code","x":-78,"y":-37.75,"uid":"175fa7b1dcf-58c3-33c4-0ac1-ded5","inputs":{"mat":{"uid":"175f56b15fb-513b-272e-6e38-996f","key":"mat"},"voxel":{"uid":"175f56ae5db-8a8a-fddd-6d35-7f02","key":"out"}},"forms":{"code":"#include voxel-base;\n\n//投射步数\nfloat step_num = 500.0;\n\n// 偏移量\nfloat ri = -1024.0;\nfloat rs = 1.0;\n// 窗宽窗位\nfloat ww = 2000.0;\nfloat wl = 700.0;\n\n// 获取HU值\nfloat getHU(vec3 pos){\n    return getValue(pos) * rs + ri;\n}\n\n// 根据窗宽窗位调窗\nfloat hu2color(float hu){\n    return (hu - wl + ww / 2.0) / ww;\n}\n\nvoid run(){\n    outColor = vec4(0,0,0,1);\n\t//根据步数获取投射信息\n\tRay ray = getRay(step_num);\n\tfloat c;\n\t//循环步进\n\tfor(float i = 0.0;i < step_num;i++){\n\t\tray.pos += ray.step;\n\t\tc = getHU(ray.pos);\n\t\tif(c < -4096.0)\n\t\t    continue;\n\t\tc = hu2color(c);\n\t\tif(c > outColor.r)\n\t\t\toutColor = vec4(c,c,c,1);\n\t}\n}"},"level":-1,"outputs":{"image":{"data":{},"type":"texture","width":480,"height":480,"gl":{"QUERY_COUNTER_BITS":34916,"TIME_ELAPSED":35007,"TIMESTAMP":36392,"GPU_DISJOINT":36795,"TEXTURE_MAX_ANISOTROPY":34046,"MAX_TEXTURE_MAX_ANISOTROPY":34047,"COMPRESSED_RGB_S3TC_DXT1_EXT":33776,"COMPRESSED_RGBA_S3TC_DXT1_EXT":33777,"COMPRESSED_RGBA_S3TC_DXT3_EXT":33778,"COMPRESSED_RGBA_S3TC_DXT5_EXT":33779,"COMPRESSED_SRGB_S3TC_DXT1_EXT":35916,"COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT":35917,"COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT":35918,"COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT":35919}}},"cache":{}},{"key":"voxel-render-code","x":-76.5,"y":57.25,"uid":"1760016e3ec-f62d-a9f0-7fb3-2892","inputs":{"mat":{"uid":"175f56b15fb-513b-272e-6e38-996f","key":"mat"},"voxel":{"uid":"175f56ae5db-8a8a-fddd-6d35-7f02","key":"out"}},"forms":{"code":"#include voxel-base;\n\n//投射步数\nfloat step_num = 1000.0;\n\n// 偏移量\nfloat ri = -1024.0;\nfloat rs = 1.0;\n\n// 获取HU值\nfloat getHU(vec3 pos){\n    return getValue(pos) * rs + ri;\n}\n\nuniform vec3 uVoxelSize;\n//获取法向\nvec3 getNormal(vec3 p){\n\tvec3 re = vec3(0.0,0.0,0.0);\n\tfloat fx = 1.0 / uVoxelSize.x;\n\tfloat fy = 1.0 / uVoxelSize.y;\n\tfloat fz = 1.0 / uVoxelSize.z;\n\tre.x += getHU(vec3(p.x + fx,p.y,p.z)) - getHU(p);\n\tre.y += getHU(vec3(p.x,p.y + fy,p.z)) - getHU(p);\n\tre.z += getHU(vec3(p.x,p.y,p.z + fz)) - getHU(p);\n\tre.x += getHU(p) - getHU(vec3(p.x - fx,p.y,p.z));\n\tre.y += getHU(p) - getHU(vec3(p.x,p.y - fy,p.z));\n\tre.z += getHU(p) - getHU(vec3(p.x,p.y,p.z - fz));\n\tif(re.x == 0.0 && re.y == 0.0 && re.z == 0.0)\n\t\treturn vec3(0.0,0.0,0.0);\n\treturn normalize(re);\n}\n\nvoid run(){\n    outColor = vec4(0,0,0,1);\n\t//根据步数获取投射信息\n\tRay ray = getRay(step_num);\n\tfloat c;\n\t//循环步进\n\tfor(float i = 0.0;i < step_num;i++){\n\t\tray.pos += ray.step;\n\t\tc = getHU(ray.pos);\n\t\tif(c < 150.0)\n\t\t    continue;\n\t\t// 写入颜色\n\t\toutColor = vec4(getHuColor(c),1.0);\n\t\t// 计算法向\n\t\tvec3 normal = getNormal(ray.pos);\n\t\t//outColor = vec4(getNormal(ray.pos),1.0);\n\t\t// 高亮和阴影\n\t\tfloat v = abs(dot(normalize(ray.step),normal));\n\t\tfloat s = 1.0 - v;\n\t\tv = pow(v,6.0);\n\t\ts = pow(s,2.0);\n\t\toutColor = vec4(v * vec3(1.0,1.0,1.0) + (1.0 - v) * outColor.xyz,1.0);\n\t\toutColor = vec4(s * vec3(0.0,0.0,0.0) + (1.0 - s) * outColor.xyz,1.0);\n\t\treturn;\n\t}\n}"},"level":0,"outputs":{"image":{"data":{},"type":"texture","width":480,"height":480,"gl":{"QUERY_COUNTER_BITS":34916,"TIME_ELAPSED":35007,"TIMESTAMP":36392,"GPU_DISJOINT":36795,"TEXTURE_MAX_ANISOTROPY":34046,"MAX_TEXTURE_MAX_ANISOTROPY":34047,"COMPRESSED_RGB_S3TC_DXT1_EXT":33776,"COMPRESSED_RGBA_S3TC_DXT1_EXT":33777,"COMPRESSED_RGBA_S3TC_DXT3_EXT":33778,"COMPRESSED_RGBA_S3TC_DXT5_EXT":33779,"COMPRESSED_SRGB_S3TC_DXT1_EXT":35916,"COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT":35917,"COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT":35918,"COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT":35919}}},"cache":{}}]}